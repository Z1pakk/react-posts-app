{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","alt","src","href","icon","faMapMarkerAlt","faStar","faStarHalfAlt","faFacebook","faTwitter","faInstagram","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iPA0HeA,EAnHH,WACV,OACE,yBAAKC,UAAU,eACb,4BAAQA,UAAU,UAChB,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,uBAAuBC,IAAI,OAAOC,IAAI,kFAEvD,yBAAKF,UAAU,oBACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,aAAaG,KAAK,KAA/B,SAEF,yBAAKH,UAAU,cACb,uBAAGA,UAAU,aAAaG,KAAK,KAA/B,aAEF,yBAAKH,UAAU,cACb,uBAAGA,UAAU,aAAaG,KAAK,KAA/B,SAEF,yBAAKH,UAAU,cACb,uBAAGA,UAAU,aAAaG,KAAK,KAA/B,aAKR,yBAAKH,UAAU,cACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,sDACf,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,4BAA4BE,IAAI,uFAEjD,yBAAKF,UAAU,oBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,cAAd,YAEF,yBAAKA,UAAU,wBACb,kBAAC,IAAD,CAAiBA,UAAU,oBAAoBI,KAAMC,MACrD,2BAAOL,UAAU,wBAAjB,aAGJ,yBAAKA,UAAU,cACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,2BACb,kBAAC,IAAD,CAAiBA,UAAU,SAASI,KAAME,MAC1C,kBAAC,IAAD,CAAiBN,UAAU,SAASI,KAAME,MAC1C,kBAAC,IAAD,CAAiBN,UAAU,SAASI,KAAME,MAC1C,kBAAC,IAAD,CAAiBN,UAAU,SAASI,KAAME,MAC1C,kBAAC,IAAD,CAAiBN,UAAU,mBAAmBI,KAAMG,OAEtD,yBAAKP,UAAU,wBAAf,UAGA,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,mCAAhB,kBAEF,yBAAKA,UAAU,wBAAf,UAGA,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,mCAAhB,mBAOZ,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,sCACb,uBAAGG,KAAK,IAAIH,UAAU,sCACpB,kBAAC,IAAD,CAAiBI,KAAMI,OAEzB,uBAAGL,KAAK,IAAIH,UAAU,qCACpB,kBAAC,IAAD,CAAiBI,KAAMK,OAEzB,uBAAGN,KAAK,IAAIH,UAAU,uCACpB,kBAAC,IAAD,CAAiBI,KAAMM,QAG3B,yBAAKV,UAAU,gCACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,YAAf,MAGA,wBAAIA,UAAU,oBAAd,UAEF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,YAAf,KAGA,wBAAIA,UAAU,oBAAd,aAEF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,YAAf,MAGA,wBAAIA,UAAU,oBAAd,cAMV,yBAAKA,UAAU,4BCpGLW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.5de759e6.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt, faStar, faStarHalfAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faFacebook, faTwitter, faInstagram } from '@fortawesome/free-brands-svg-icons'\n\nconst App = () => {\n  return (\n    <div className=\"app-wrapper\">\n      <header className=\"header\">\n        <div className=\"header__body container\">\n          <div className=\"logo\">\n            <img className=\"logo__icon logo-img \" alt=\"Logo\" src=\"https://i.pinimg.com/originals/d9/12/09/d91209340bdc005936c46323a62caaff.png\" />\n          </div>\n          <nav className=\"menu header__nav\">\n            <div className=\"menu__item\">\n              <a className=\"menu__link\" href=\"#\">Home</a>\n            </div>\n            <div className=\"menu__item\">\n              <a className=\"menu__link\" href=\"#\">Messages</a>\n            </div>\n            <div className=\"menu__item\">\n              <a className=\"menu__link\" href=\"#\">News</a>\n            </div>\n            <div className=\"menu__item\">\n              <a className=\"menu__link\" href=\"#\">Music</a>\n            </div>\n          </nav>\n        </div>\n      </header>\n      <div className=\"my-profile\">\n        <div className=\"my-profile__body\">\n          <div className=\"my-profile__header\">\n            <div className=\"my-profile__upper-header\">\n              <div className=\"my-profile__bg img-cover header-cover black-cover\" />\n              <div className=\"my-profile__info container\">\n                <div className=\"my-profile__image\">\n                  <img className=\"my-profile__avatar avatar\" src=\"https://olympus.crumina.net/wp-content/uploads/avatars/1/5c24a6689aa5b-bpfull.jpg\" />\n                </div>\n                <div className=\"my-profile__meta\">\n                  <div className=\"flex-left\">\n                    <div className=\"my-profile__name\">\n                      <h2 className=\"white-text\">Crumina</h2>\n                    </div>\n                    <div className=\"my-profile__location\">\n                      <FontAwesomeIcon className=\"f-icon white-text\" icon={faMapMarkerAlt} />\n                      <small className=\"white-text uppercase\">Ukraine</small>\n                    </div>\n                  </div>\n                  <div className=\"flex-right\">\n                    <div className=\"my-profile__rating\">\n                      <div className=\"my-profile__stars stars\">\n                        <FontAwesomeIcon className=\"f-icon\" icon={faStar} />\n                        <FontAwesomeIcon className=\"f-icon\" icon={faStar} />\n                        <FontAwesomeIcon className=\"f-icon\" icon={faStar} />\n                        <FontAwesomeIcon className=\"f-icon\" icon={faStar} />\n                        <FontAwesomeIcon className=\"f-icon half-star\" icon={faStarHalfAlt} />\n                      </div>\n                      <div className=\"separator white-text\">\n                        •\n                        </div>\n                      <div className=\"my-profile__rate\">\n                        <span className=\"uppercase white-text small-text\">4.67 out of 5</span>\n                      </div>\n                      <div className=\"separator white-text\">\n                        •\n                        </div>\n                      <div className=\"my-profile__rate-count \">\n                        <span className=\"uppercase white-text small-text\">3 ratings</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"my-profile__lower-header\">\n              <div className=\"my-profile__social container\">\n                <div className=\"my-profile__links social flex-left\">\n                  <a href=\"#\" className=\"social__link social__link_facebook\">\n                    <FontAwesomeIcon icon={faFacebook} />\n                  </a>\n                  <a href=\"#\" className=\"social__link social__link_twitter\">\n                    <FontAwesomeIcon icon={faTwitter} />\n                  </a>\n                  <a href=\"#\" className=\"social__link social__link_instagram\">\n                    <FontAwesomeIcon icon={faInstagram} />\n                  </a>\n                </div>\n                <div className=\"my-profile__stats flex-right\">\n                  <div className=\"count-info\">\n                    <div className=\"s-number\">\n                      21\n                    </div>\n                    <h3 className=\"s-info uppercase\">posts</h3>\n                  </div>\n                  <div className=\"count-info\">\n                    <div className=\"s-number\">\n                      4\n                    </div>\n                    <h3 className=\"s-info uppercase\">comments</h3>\n                  </div>\n                  <div className=\"count-info\">\n                    <div className=\"s-number\">\n                      56\n                    </div>\n                    <h3 className=\"s-info uppercase\">views</h3>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"my-profile__content\">\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}